// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Introduction

// Input device configuration.
// Find the full list of options on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
	// Switch the mod keys around: use Alt normally, and Super inside a nested window.
    mod-key "Super"
    mod-key-nested "Super"
    keyboard {
				repeat-delay 250
				repeat-rate 45
        numlock
    }
    touchpad {
        off
        tap
        dwt
        // dwtp
        drag true
        drag-lock
        natural-scroll
        accel-speed 0.4
        // accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }
    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }
		disable-power-key-handling
		workspace-auto-back-and-forth
	  warp-mouse-to-focus
    focus-follows-mouse
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
/-output "eDP-1" {
    // off
    mode "1920x1080@120.030"
    scale 2
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"
    position x=1280 y=0
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
		background-color "0000"
    gaps 12

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "never"
    empty-workspace-above-first
    always-center-single-column
    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        off

        // How many logical pixels the ring extends out from the windows.
        width 3

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        active-color "#ff6000"

        // Color of the ring on inactive monitors.
        inactive-color "#505050"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.

    border {
        width 2
        active-color "000F"
        inactive-color "#000A"
        urgent-color "#9b0000"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    shadow {
        on
        // draw-behind-window true
        // Softness controls the shadow blur radius.
        softness 3
        spread 1
        offset x=1 y=1
        color "#000F"
    }
    tab-indicator {
        // off
        width 4
		    length total-proportion=0.2
        gaps-between-tabs 2
        corner-radius 8
        active-color "#80c8ff"
        inactive-color "#808080"
    }
    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

// This line starts waybar, a commonly used bar for Wayland compositors.
spawn-at-startup "pcmds" "system" "startup"

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/niri_%Y-%m-%d_%H-%M-%S.png"

// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

cursor{
	hide-when-typing
	hide-after-inactive-ms 100
}
hotkey-overlay{
	skip-at-startup
}
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules
window-rule {
    match app-id=r#"kitty$"#
    match app-id=r#"nvim$"#
		opacity 0.9
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    draw-border-with-background false
    geometry-corner-radius 12
    clip-to-geometry true
    tiled-state true

}

window-rule{
	match is-focused=true;
    // border {
    //   on
    //     width 2
    //     active-color "#000f"
    // }
    shadow {
        on
        // draw-behind-window true
        // Softness controls the shadow blur radius.
        softness 10
        spread 3
        offset x=5 y=5
        color "#000a"
    }
}
binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Open a Terminal: kitty" { spawn "pcmds" "start" "term"; }
    Mod+T hotkey-overlay-title="Open a Terminal: kitty" { spawn "kitty"; }
    Mod+Alt+N hotkey-overlay-title="Neovim" { spawn "pcmds" "start" "editor"; }
    Alt+Space hotkey-overlay-title="Xemnu" { spawn "Xmenu"; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+P repeat=false { toggle-overview; }

    Mod+Q { close-window; }
		Mod+Backspace { close-window; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Alt+H     { move-column-left; }
    Mod+Alt+J     { move-window-down-or-to-workspace-down; }
    Mod+Alt+K     { move-window-up-or-to-workspace-up; }
    Mod+Alt+L     { move-column-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Alt+Comma         { move-workspace-down; }
    Mod+Alt+Period         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }


    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+U { focus-workspace 7; }
    Mod+I { focus-workspace 8; }
    Mod+Y { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+U { move-column-to-workspace 7; }
    Mod+Ctrl+I { move-column-to-workspace 8; }
    Mod+Ctrl+Y { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    Mod+D  { consume-or-expel-window-left; }
    Mod+Shift+D { consume-or-expel-window-right; }

    // Mod+D  { consume-window-into-column; }
    // Mod+Shift+D { expel-window-from-column; }

    Mod+M { switch-preset-column-width; }
    Mod+Shift+M { switch-preset-window-height; }
    Mod+Ctrl+M { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Ctrl+Alt+Delete { quit; }
		Mod+Delete {spawn "pcmds" "system" "power_menu";}

    Mod+Shift+P { power-off-monitors; }
}
overview {
    zoom 0.25
    backdrop-color "#777777"
	// workspace-shadow {
	// 	off
	// }
}
layer-rule {
    match namespace="^swww"
    place-within-backdrop true
}
